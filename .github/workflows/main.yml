name: Docker Image CI

on:
  push:
    branches:
      - 'feature/build-tests'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 */3 *'

env:
  image_name: ${{ vars.DOCKER_USERNAME }}/test

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - if: github.ref == 'refs/heads/main'
        name: Conditional(Set tag as `latest`)
        run: |
          echo "image_tags_alpine=alpine,latest" >> $GITHUB_ENV
          echo "image_tags_ubuntu=ubuntu" >> $GITHUB_ENV

      # - if: startsWith(github.ref, 'refs/tags/')
      #   name: Conditional(Set tag as `{version}`)
      #   run: |
      #     echo "image_tags_alpine=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - if: env.image_tags_alpine == ''
        name: Conditional(Set tag as `dev`)
        run: |
          echo 'image_tags_alpine=alpine-dev' >> $GITHUB_ENV
          echo 'image_tags_ubuntu=ubuntu-dev' >> $GITHUB_ENV

      - name: Add image name to list of image tags
        run: |
          images_alpine=$(echo "${image_tags_alpine}" | sed "s,[^,]*,${image_name}:&,g")
          images_ubuntu=$(echo "${image_tags_ubuntu}" | sed "s,[^,]*,${image_name}:&,g")
          echo "images_alpine=${images_alpine}" >> $GITHUB_ENV
          echo "images_ubuntu=${images_ubuntu}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          push: true
          tags: ${{ fromJson(steps.gen_tags.outputs.tags) }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile-alpine
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.images_alpine }}
